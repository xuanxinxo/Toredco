generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Application {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @db.Date
  cv        String?
  email     String
  hiringId  String?
  hiring   Hiring? @relation(fields: [hiringId], references: [id])
  jobId     String?
  job      Job?     @relation(fields: [jobId], references: [id])
  message   String?
  name      String
  phone     String
}

model Hiring {
  applications Application[]
  img          String?
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  benefits     String[]
  company      String
  deadline     DateTime @db.Date
  description  String
  location     String
  postedDate   DateTime @db.Date
  requirements String[]
  salary       String
  title        String
  type         String
}

model Job {
  applications Application[]
  img          String?
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  benefits     String[]
  company      String
  deadline     DateTime @db.Date
  description  String
  location     String
  postedDate   DateTime @db.Date
  requirements String[]
  salary       String
  status       String
  title        String
  type         String
}

model NewJob {
  img          String?
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  benefits     String[]
  company      String
  createdAt    DateTime @db.Date
  deadline     DateTime @db.Date
  description  String
  isRemote     Boolean
  location     String
  postedDate   DateTime @db.Date
  requirements String[]
  salary       String
  status       String
  tags         String[]
  title        String
  type         String
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now()) @db.Date
}

model Post {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  slug       String   @unique
  content    String
  published  Boolean  @default(false)
  createdAt  DateTime @default(now()) @db.Date
  updatedAt  DateTime @updatedAt @db.Date
  authorId   String?
}